package components

import "split/models"
import "fmt"

func getExpensePostTarget(expense *models.Expense) string {
	if expense == nil {
		return "/api/expenses"
	}
	return "/api/expenses/" + fmt.Sprintf("%d", expense.ID)
}

templ ExpenseForm(expense *models.Expense, categories []models.Category, currencies []models.Currency, users []models.User) {
	<div class="w-full max-w-2xl bg-white p-8">
		<h2 class="text-2xl font-bold mb-6">
			if expense == nil {
				Add New Expense
			} else {
				Edit Expense: "{ expense.Title }"
			}
		</h2>
		<form hx-post={ getExpensePostTarget(expense) } @htmx:after-request="$el.reset(); showModal = false" hx-swap="none" x-data="init">
			@templ.JSONScript("expense", expense)
			<div class="mb-4">
				<label for="title" class="block text-sm font-medium text-gray-700">Title</label>
				<input x-model="Title" autofocus type="text" id="title" name="title" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" required/>
			</div>
			<div class="mb-4">
				<label for="amount" class="block text-sm font-medium text-gray-700">Amount</label>
				<input x-model="Amount" type="number" id="amount" name="amount" step="0.01" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" required/>
			</div>
			<div class="mb-4">
				<label for="currencyCode" class="block text-sm font-medium text-gray-700">Currency</label>
				<select x-model="CurrencyCode" id="currencyCode" name="currencyCode" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
					<option value="">Select Currency</option>
					for _, currency := range currencies {
						<option value={ currency.Code }>{ currency.Name }</option>
					}
				</select>
			</div>
			<div class="mb-4">
				<label for="notes" class="block text-sm font-medium text-gray-700">Notes</label>
				<textarea x-model="Notes" id="notes" name="notes" rows="3" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"></textarea>
			</div>
			<div class="mb-4">
				<label for="categoryID" class="block text-sm font-medium text-gray-700">Category</label>
				<select x-model="CategoryID" id="categoryID" name="categoryID" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
					<option value="">Select Category</option>
					for _, category := range categories {
						<option value={ fmt.Sprintf("%d", category.ID) }>{ category.Name }</option>
					}
				</select>
			</div>
			<div class="mb-4">
				<label for="PaidBy" class="block text-sm font-medium text-gray-700">Paid by</label>
				<select x-model="PaidBy" id="PaidBy" name="PaidBy" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
					<option value="">Select User</option>
					for _, user := range users {
						<option value={ fmt.Sprintf("%d", user.ID) }>{ user.Username }</option>
					}
				</select>
			</div>
			<div class="flex justify-end space-x-4">
				@Button("gray", templ.Attributes{"@click": "showModal = false", "type": "button"}) {
					Cancel
				}
				@Button("indigo", templ.Attributes{"type": "submit"}) {
					Submit
				}
			</div>
		</form>
		<script>
			Alpine.data('init', () => {
				const data = JSON.parse(document.getElementById('expense').textContent)
				return {
					Title: null,
					Amount: 0,
					Notes: null,
					CurrencyCode: 'USD',
					CategoryID: null,
					PaidBy: null,
					...data,
				}
			})
		</script>
	</div>
}
