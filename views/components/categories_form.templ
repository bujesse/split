package components

import "split/models"
import "fmt"

func getCategoriesPostTarget(category *models.Category) string {
	if category == nil {
		return "/api/categories"
	}
	return "/api/categories/" + fmt.Sprintf("%d", category.ID)
}

templ CategoriesForm(category *models.Category) {
	<div class="w-full max-w-2xl">
		@templ.JSONScript("category", category)
		<h2 class="text-2xl font-bold mb-6">
			if category == nil {
				Add New Category
			} else {
				Edit Category: "{ category.Name }"
			}
		</h2>
		<form hx-post={ getCategoriesPostTarget(category) } @htmx:after-request="baseModal.close()" hx-swap="none" x-data="init">
			<div class="mb-4">
				<label class="input input-bordered flex items-center gap-2">
					Name
					<input x-model="Name" autofocus required type="text" id="name" name="name" class="grow"/>
				</label>
			</div>
			<div class="mb-4">
				<label class="input input-bordered flex items-center gap-2">
					Type
					<input x-model="Type" required type="text" id="type" name="type" class="grow"/>
				</label>
			</div>
			<div class="mb-4">
				<label class="input input-bordered flex items-center gap-2">
					Icon
					<input x-model="Icon" required type="text" id="type" name="icon" class="grow"/>
				</label>
				<div class="mt-2 flex">
					<span class="text-sm"><a href="https://fontawesome.com/search?o=r&m=free" target="_blank" class="link link-primary">Browse Icons</a></span>
				</div>
			</div>
			<div class="mb-4">
				<textarea x-model="Description" id="description" name="description" class="textarea textarea-bordered w-full" placeholder="Description"></textarea>
			</div>
			<div class="flex justify-between items-center">
				<div>
					if category != nil {
						<button class="btn btn-error" type="button">
							Delete
						</button>
					}
				</div>
				<div class="flex space-x-2">
					<button class="btn btn-neutral" type="button" onclick="baseModal.close()">
						Cancel
					</button>
					<button type="submit" class="btn btn-primary">
						Submit
					</button>
				</div>
			</div>
		</form>
		<script>
			Alpine.data('init', () => {
				const data = JSON.parse(document.getElementById('category').textContent)
				return {
					Name: null,
					Type: null,
					Icon: null,
					Description: null,
					...data,
				}
			})
		</script>
	</div>
}
