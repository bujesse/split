package partials

import (
	"split/models"
	"strconv"
)

templ ExpensesTable(expenses []models.Expense) {
	<div class="overflow-x-auto">
		<table class="table">
			<thead>
				<tr>
					<!-- <th> -->
					<!-- 	<label> -->
					<!-- 		<input type="checkbox" class="checkbox"/> -->
					<!-- 	</label> -->
					<!-- </th> -->
				</tr>
			</thead>
			<tbody>
				for _, expense := range expenses {
					<tr
						class="pb-2 border-b-2 border-base-200"
						x-data={ templ.JSONString(expense) }
					>
						<!-- <th> -->
						<!-- 	<label> -->
						<!-- 		<input type="checkbox" class="checkbox"/> -->
						<!-- 	</label> -->
						<!-- </th> -->
						<td>
							<div
								class="flex items-center gap-3 cursor-pointer"
								hx-get={ "/partials/expenses/edit/" + strconv.Itoa(int(expense.ID)) }
								hx-trigger="click"
								hx-target="#modal-container"
								onclick="baseModal.showModal()"
							>
								<div class="avatar">
									<div class="mask mask-squircle h-12 w-12">
										<img
											src="https://img.daisyui.com/images/profile/demo/2@94.webp"
											alt="Avatar Tailwind CSS Component"
										/>
									</div>
								</div>
								<div>
									<div class="font-bold">{ expense.Title }</div>
									<div class="text-sm opacity-50">
										{ expense.PaidBy.Username } paid
										<span x-text="FormatAsCurrency($data.Currency.Code, $data.Amount)"></span>
									</div>
								</div>
							</div>
						</td>
						if len(expense.ExpenseSplits) > 0 {
							<td class="text-right">
								{ expense.ExpenseSplits[0].User.Username } owes <span x-html="printExpenseSplit($data.Currency.Code, $data.Amount, $data.ExpenseSplits[0])"></span>
								<br/>
								<span class="badge badge-ghost badge-sm">{ expense.CreatedAt.Format("Jan 01") }</span>
							</td>
						}
					</tr>
				}
			</tbody>
		</table>
	</div>
	<script>
		function printExpenseSplit(currency, amount, expenseSplit) {
			if (expenseSplit.Amount == 0) {
				return 'nothing'
			} else if (expenseSplit.SplitType == 'pct') {
				return `<strong>${FormatAsCurrency(currency, amount * expenseSplit.SplitValue / 100)}</strong> (${expenseSplit.SplitValue}%)`
			} else if (expenseSplit.SplitType == 'amt') {
				return `<strong>${FormatAsCurrency(currency, expenseSplit.SplitValue)}</strong> (${Math.round(expenseSplit.SplitValue / amount * 100)}%)`
			}
		}
	</script>
}
