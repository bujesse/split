package partials

import (
	"split/models"
	"strconv"
	"split/views/components"
)

templ ExpensesTable(entries []interface{}, categories []models.Category) {
	@components.Icons(categories)
	<div class="overflow-x-auto">
		<table class="table">
			<thead>
				<tr>
					<!-- <th> -->
					<!-- 	<label> -->
					<!-- 		<input type="checkbox" class="checkbox"/> -->
					<!-- 	</label> -->
					<!-- </th> -->
				</tr>
			</thead>
			<tbody>
				for _, entry := range entries {
					<tr
						class="pb-2 border-b-2 border-base-200"
						x-data={ templ.JSONString(entry) }
					>
						switch entry := entry.(type) {
							case models.Settlement:
								<td
									class="rainbow-text-soft"
									hx-get={ "/partials/settlements/edit/" + strconv.Itoa(int(entry.ID)) }
									hx-trigger="click"
									hx-target="#modal-container"
									onclick="baseModal.showModal()"
								>
									<strong>Settlement ðŸŽ‰</strong>
								</td>
								<td class="text-right">
									{ entry.SettledBy.Username } paid <strong x-text="FormatAsCurrency($data.CurrencyCode, $data.Amount)"></strong>
									<br/>
									<span class="badge badge-ghost badge-sm" x-text="LocalizeDate($data.SettlementDate)"></span>
								</td>
							case models.Expense:
								<!-- <th> -->
								<!-- 	<label> -->
								<!-- 		<input type="checkbox" class="checkbox"/> -->
								<!-- 	</label> -->
								<!-- </th> -->
								<td>
									<div
										class="flex items-center gap-3 cursor-pointer"
										hx-get={ "/partials/expenses/edit/" + strconv.Itoa(int(entry.ID)) }
										hx-trigger="click"
										hx-target="#modal-container"
										onclick="baseModal.showModal()"
									>
										@components.Icon(entry.Category.Icon)
										<div>
											<div class="font-bold">{ entry.Title }</div>
											<div class="text-sm opacity-50">
												{ entry.PaidBy.Username } paid
												<span x-text="FormatAsCurrency($data.Currency.Code, $data.Amount)"></span>
											</div>
										</div>
									</div>
								</td>
								if len(entry.ExpenseSplits) > 0 {
									<td class="text-right">
										{ entry.ExpenseSplits[0].User.Username } owes <span x-html="printExpenseSplit($data.Currency.Code, $data.Amount, $data.ExpenseSplits[0])"></span>
										<br/>
										<span class="badge badge-ghost badge-sm" x-text="LocalizeDate($data.PaidDate)"></span>
									</td>
								}
						}
					</tr>
				}
			</tbody>
		</table>
	</div>
	<script>
		function printExpenseSplit(currency, amount, expenseSplit) {
			if (expenseSplit.Amount == 0) {
				return 'nothing'
			} else if (expenseSplit.SplitType == 'pct') {
				return `<strong>${FormatAsCurrency(currency, amount * expenseSplit.SplitValue / 100)}</strong> (${expenseSplit.SplitValue}%)`
			} else if (expenseSplit.SplitType == 'amt') {
				return `<strong>${FormatAsCurrency(currency, expenseSplit.SplitValue)}</strong> (${Math.round(expenseSplit.SplitValue / amount * 100)}%)`
			}
		}
	</script>
}
